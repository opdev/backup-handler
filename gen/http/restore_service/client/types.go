// Code generated by goa v3.7.2, DO NOT EDIT.
//
// Restore Service HTTP client types
//
// Command:
// $ goa gen github.com/opdev/backup-handler/design

package client

import (
	restoreservice "github.com/opdev/backup-handler/gen/restore_service"
	restoreserviceviews "github.com/opdev/backup-handler/gen/restore_service/views"
	goa "goa.design/goa/v3/pkg"
)

// CreateRequestBody is the type of the "Restore Service" service "create"
// endpoint HTTP request body.
type CreateRequestBody struct {
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	BackupLocation       *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
}

// UpdateRequestBody is the type of the "Restore Service" service "update"
// endpoint HTTP request body.
type UpdateRequestBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace      *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// CreateResponseBody is the type of the "Restore Service" service "create"
// endpoint HTTP response body.
type CreateResponseBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace      *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// GetResponseBody is the type of the "Restore Service" service "get" endpoint
// HTTP response body.
type GetResponseBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace      *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// UpdateResponseBody is the type of the "Restore Service" service "update"
// endpoint HTTP response body.
type UpdateResponseBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace      *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// DeleteResponseBody is the type of the "Restore Service" service "delete"
// endpoint HTTP response body.
type DeleteResponseBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace      *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// CreateBackupNotFoundResponseBody is the type of the "Restore Service"
// service "create" endpoint HTTP response body for the "backup_not_found"
// error.
type CreateBackupNotFoundResponseBody struct {
	// backup resource not found
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// NewCreateRequestBody builds the HTTP request body from the payload of the
// "create" endpoint of the "Restore Service" service.
func NewCreateRequestBody(p *restoreservice.Restore) *CreateRequestBody {
	body := &CreateRequestBody{
		Name:                 p.Name,
		Namespace:            p.Namespace,
		StorageSecret:        p.StorageSecret,
		DestinationName:      p.DestinationName,
		DestinationNamespace: p.DestinationNamespace,
		BackupLocation:       p.BackupLocation,
	}
	return body
}

// NewUpdateRequestBody builds the HTTP request body from the payload of the
// "update" endpoint of the "Restore Service" service.
func NewUpdateRequestBody(p *restoreservice.Restoreresult) *UpdateRequestBody {
	body := &UpdateRequestBody{
		CreatedAt:            p.CreatedAt,
		UpdatedAt:            p.UpdatedAt,
		DeletedAt:            p.DeletedAt,
		ID:                   p.ID,
		Name:                 p.Name,
		Namespace:            p.Namespace,
		BackupLocation:       p.BackupLocation,
		DestinationName:      p.DestinationName,
		DestinationNamespace: p.DestinationNamespace,
		StorageSecret:        p.StorageSecret,
		KubernetesResource:   p.KubernetesResource,
		Database:             p.Database,
	}
	return body
}

// NewCreateRestoreresultOK builds a "Restore Service" service "create"
// endpoint result from a HTTP "OK" response.
func NewCreateRestoreresultOK(body *CreateResponseBody) *restoreserviceviews.RestoreresultView {
	v := &restoreserviceviews.RestoreresultView{
		CreatedAt:            body.CreatedAt,
		UpdatedAt:            body.UpdatedAt,
		DeletedAt:            body.DeletedAt,
		ID:                   body.ID,
		Name:                 body.Name,
		Namespace:            body.Namespace,
		BackupLocation:       body.BackupLocation,
		DestinationName:      body.DestinationName,
		DestinationNamespace: body.DestinationNamespace,
		StorageSecret:        body.StorageSecret,
		KubernetesResource:   body.KubernetesResource,
		Database:             body.Database,
	}

	return v
}

// NewCreateBackupNotFound builds a Restore Service service create endpoint
// backup_not_found error.
func NewCreateBackupNotFound(body *CreateBackupNotFoundResponseBody) *restoreservice.BackupNotFound {
	v := &restoreservice.BackupNotFound{
		Message: *body.Message,
	}

	return v
}

// NewGetRestoreresultOK builds a "Restore Service" service "get" endpoint
// result from a HTTP "OK" response.
func NewGetRestoreresultOK(body *GetResponseBody) *restoreserviceviews.RestoreresultView {
	v := &restoreserviceviews.RestoreresultView{
		CreatedAt:            body.CreatedAt,
		UpdatedAt:            body.UpdatedAt,
		DeletedAt:            body.DeletedAt,
		ID:                   body.ID,
		Name:                 body.Name,
		Namespace:            body.Namespace,
		BackupLocation:       body.BackupLocation,
		DestinationName:      body.DestinationName,
		DestinationNamespace: body.DestinationNamespace,
		StorageSecret:        body.StorageSecret,
		KubernetesResource:   body.KubernetesResource,
		Database:             body.Database,
	}

	return v
}

// NewUpdateRestoreresultOK builds a "Restore Service" service "update"
// endpoint result from a HTTP "OK" response.
func NewUpdateRestoreresultOK(body *UpdateResponseBody) *restoreserviceviews.RestoreresultView {
	v := &restoreserviceviews.RestoreresultView{
		CreatedAt:            body.CreatedAt,
		UpdatedAt:            body.UpdatedAt,
		DeletedAt:            body.DeletedAt,
		ID:                   body.ID,
		Name:                 body.Name,
		Namespace:            body.Namespace,
		BackupLocation:       body.BackupLocation,
		DestinationName:      body.DestinationName,
		DestinationNamespace: body.DestinationNamespace,
		StorageSecret:        body.StorageSecret,
		KubernetesResource:   body.KubernetesResource,
		Database:             body.Database,
	}

	return v
}

// NewDeleteRestoreresultOK builds a "Restore Service" service "delete"
// endpoint result from a HTTP "OK" response.
func NewDeleteRestoreresultOK(body *DeleteResponseBody) *restoreserviceviews.RestoreresultView {
	v := &restoreserviceviews.RestoreresultView{
		CreatedAt:            body.CreatedAt,
		UpdatedAt:            body.UpdatedAt,
		DeletedAt:            body.DeletedAt,
		ID:                   body.ID,
		Name:                 body.Name,
		Namespace:            body.Namespace,
		BackupLocation:       body.BackupLocation,
		DestinationName:      body.DestinationName,
		DestinationNamespace: body.DestinationNamespace,
		StorageSecret:        body.StorageSecret,
		KubernetesResource:   body.KubernetesResource,
		Database:             body.Database,
	}

	return v
}

// ValidateCreateBackupNotFoundResponseBody runs the validations defined on
// create_backup_not_found_response_body
func ValidateCreateBackupNotFoundResponseBody(body *CreateBackupNotFoundResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}
