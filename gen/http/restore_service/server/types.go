// Code generated by goa v3.7.3, DO NOT EDIT.
//
// Restore Service HTTP server types
//
// Command:
// $ goa gen github.com/opdev/backup-handler/design

package server

import (
	restoreservice "github.com/opdev/backup-handler/gen/restore_service"
	restoreserviceviews "github.com/opdev/backup-handler/gen/restore_service/views"
)

// CreateRequestBody is the type of the "Restore Service" service "create"
// endpoint HTTP request body.
type CreateRequestBody struct {
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Key of backup tarball
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
}

// UpdateRequestBody is the type of the "Restore Service" service "update"
// endpoint HTTP request body.
type UpdateRequestBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// Key of backup tarball
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// CreateResponseBody is the type of the "Restore Service" service "create"
// endpoint HTTP response body.
type CreateResponseBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// Key of backup tarball
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// GetResponseBody is the type of the "Restore Service" service "get" endpoint
// HTTP response body.
type GetResponseBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// Key of backup tarball
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// UpdateResponseBody is the type of the "Restore Service" service "update"
// endpoint HTTP response body.
type UpdateResponseBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// Key of backup tarball
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// DeleteResponseBody is the type of the "Restore Service" service "delete"
// endpoint HTTP response body.
type DeleteResponseBody struct {
	CreatedAt *string `form:"created_at,omitempty" json:"created_at,omitempty" xml:"created_at,omitempty"`
	UpdatedAt *string `form:"updated_at,omitempty" json:"updated_at,omitempty" xml:"updated_at,omitempty"`
	DeletedAt *string `form:"deleted_at,omitempty" json:"deleted_at,omitempty" xml:"deleted_at,omitempty"`
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Name of pachyderm instance to restore to
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Namespace to restore to
	Namespace *string `form:"namespace,omitempty" json:"namespace,omitempty" xml:"namespace,omitempty"`
	// Key of backup tarball
	BackupLocation *string `form:"backup_location,omitempty" json:"backup_location,omitempty" xml:"backup_location,omitempty"`
	// name of pachyderm instance to restore to
	DestinationName *string `form:"destination_name,omitempty" json:"destination_name,omitempty" xml:"destination_name,omitempty"`
	// namespace to restore pachyderm to
	DestinationNamespace *string `form:"destination_namespace,omitempty" json:"destination_namespace,omitempty" xml:"destination_namespace,omitempty"`
	// Kubernetes secret containing S3 storage credentials
	StorageSecret *string `form:"storage_secret,omitempty" json:"storage_secret,omitempty" xml:"storage_secret,omitempty"`
	// base64 encoded kubernetes object
	KubernetesResource *string `form:"kubernetes_resource,omitempty" json:"kubernetes_resource,omitempty" xml:"kubernetes_resource,omitempty"`
	// base64 encoded database dump
	Database *string `form:"database,omitempty" json:"database,omitempty" xml:"database,omitempty"`
}

// CreateBackupNotFoundResponseBody is the type of the "Restore Service"
// service "create" endpoint HTTP response body for the "backup_not_found"
// error.
type CreateBackupNotFoundResponseBody struct {
	// backup resource not found
	Message string `form:"message" json:"message" xml:"message"`
}

// NewCreateResponseBody builds the HTTP response body from the result of the
// "create" endpoint of the "Restore Service" service.
func NewCreateResponseBody(res *restoreserviceviews.RestoreresultView) *CreateResponseBody {
	body := &CreateResponseBody{
		CreatedAt:            res.CreatedAt,
		UpdatedAt:            res.UpdatedAt,
		DeletedAt:            res.DeletedAt,
		ID:                   res.ID,
		Name:                 res.Name,
		Namespace:            res.Namespace,
		BackupLocation:       res.BackupLocation,
		DestinationName:      res.DestinationName,
		DestinationNamespace: res.DestinationNamespace,
		StorageSecret:        res.StorageSecret,
		KubernetesResource:   res.KubernetesResource,
		Database:             res.Database,
	}
	return body
}

// NewGetResponseBody builds the HTTP response body from the result of the
// "get" endpoint of the "Restore Service" service.
func NewGetResponseBody(res *restoreserviceviews.RestoreresultView) *GetResponseBody {
	body := &GetResponseBody{
		CreatedAt:            res.CreatedAt,
		UpdatedAt:            res.UpdatedAt,
		DeletedAt:            res.DeletedAt,
		ID:                   res.ID,
		Name:                 res.Name,
		Namespace:            res.Namespace,
		BackupLocation:       res.BackupLocation,
		DestinationName:      res.DestinationName,
		DestinationNamespace: res.DestinationNamespace,
		StorageSecret:        res.StorageSecret,
		KubernetesResource:   res.KubernetesResource,
		Database:             res.Database,
	}
	return body
}

// NewUpdateResponseBody builds the HTTP response body from the result of the
// "update" endpoint of the "Restore Service" service.
func NewUpdateResponseBody(res *restoreserviceviews.RestoreresultView) *UpdateResponseBody {
	body := &UpdateResponseBody{
		CreatedAt:            res.CreatedAt,
		UpdatedAt:            res.UpdatedAt,
		DeletedAt:            res.DeletedAt,
		ID:                   res.ID,
		Name:                 res.Name,
		Namespace:            res.Namespace,
		BackupLocation:       res.BackupLocation,
		DestinationName:      res.DestinationName,
		DestinationNamespace: res.DestinationNamespace,
		StorageSecret:        res.StorageSecret,
		KubernetesResource:   res.KubernetesResource,
		Database:             res.Database,
	}
	return body
}

// NewDeleteResponseBody builds the HTTP response body from the result of the
// "delete" endpoint of the "Restore Service" service.
func NewDeleteResponseBody(res *restoreserviceviews.RestoreresultView) *DeleteResponseBody {
	body := &DeleteResponseBody{
		CreatedAt:            res.CreatedAt,
		UpdatedAt:            res.UpdatedAt,
		DeletedAt:            res.DeletedAt,
		ID:                   res.ID,
		Name:                 res.Name,
		Namespace:            res.Namespace,
		BackupLocation:       res.BackupLocation,
		DestinationName:      res.DestinationName,
		DestinationNamespace: res.DestinationNamespace,
		StorageSecret:        res.StorageSecret,
		KubernetesResource:   res.KubernetesResource,
		Database:             res.Database,
	}
	return body
}

// NewCreateBackupNotFoundResponseBody builds the HTTP response body from the
// result of the "create" endpoint of the "Restore Service" service.
func NewCreateBackupNotFoundResponseBody(res *restoreservice.BackupNotFound) *CreateBackupNotFoundResponseBody {
	body := &CreateBackupNotFoundResponseBody{
		Message: res.Message,
	}
	return body
}

// NewCreateRestore builds a Restore Service service create endpoint payload.
func NewCreateRestore(body *CreateRequestBody) *restoreservice.Restore {
	v := &restoreservice.Restore{
		Name:                 body.Name,
		Namespace:            body.Namespace,
		StorageSecret:        body.StorageSecret,
		DestinationName:      body.DestinationName,
		DestinationNamespace: body.DestinationNamespace,
		BackupLocation:       body.BackupLocation,
	}

	return v
}

// NewGetPayload builds a Restore Service service get endpoint payload.
func NewGetPayload(id string) *restoreservice.GetPayload {
	v := &restoreservice.GetPayload{}
	v.ID = &id

	return v
}

// NewUpdateRestoreresult builds a Restore Service service update endpoint
// payload.
func NewUpdateRestoreresult(body *UpdateRequestBody) *restoreservice.Restoreresult {
	v := &restoreservice.Restoreresult{
		CreatedAt:            body.CreatedAt,
		UpdatedAt:            body.UpdatedAt,
		DeletedAt:            body.DeletedAt,
		ID:                   body.ID,
		Name:                 body.Name,
		Namespace:            body.Namespace,
		BackupLocation:       body.BackupLocation,
		DestinationName:      body.DestinationName,
		DestinationNamespace: body.DestinationNamespace,
		StorageSecret:        body.StorageSecret,
		KubernetesResource:   body.KubernetesResource,
		Database:             body.Database,
	}

	return v
}

// NewDeletePayload builds a Restore Service service delete endpoint payload.
func NewDeletePayload(id string) *restoreservice.DeletePayload {
	v := &restoreservice.DeletePayload{}
	v.ID = &id

	return v
}
